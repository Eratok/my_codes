-- Weekly Scorecard


-- Overall WoW growth

@set tw_date = date'2023-11-04'
@set lw_date = date'2023-10-28'


select cluster_grade channel, ds
	, count(distinct case when cluster_grade = 'Sales-Led Sales' then org_wl_id else org_id end) qorgs, count(cluster_id) clusters, sum(mrr__total*12) qarr
--from awsdatacatalog.product_analytics.analytics__atlas_search_mbr_base_data_static_6mo
from awsdatacatalog.product_analytics.an_atlas_search_mbr_base_data_wl

where ds in (:lw_date, :tw_date)
	and qualification_flg = 1
group by 1, 2
order by 1, 2



-- WoW segmented breakdown


with base as (
	select org_id, org_name, ds
--		, sales_channel channel
		, cluster_grade channel
		, sum(mrr__total) qmrr, count(cluster_id) qclusters, sum(active_7d_usage) qvolume, max(qualification_flg) qual_flg
		, max(cast(regexp_extract(instance_size, '\d+') as int)) biggest_instance
--	from awsdatacatalog.product_analytics.analytics__atlas_search_mbr_base_data_static_v2
--	from awsdatacatalog.product_analytics.analytics__atlas_search_mbr_base_data_static_6mo 
	from awsdatacatalog.product_analytics.an_atlas_search_mbr_base_data_wl
	where 1=1
--	and ds > date'2023-07-01'
	and qualification_flg = 1
	group by 1, 2, 3, 4
--	having qvolume > 0
)
, current as (
	select org_id, org_volume, org_volume_lw, index_count, index_count_lw, qual_ds, latest_qual_ds
	from (
		select org_id, ds, qual_ds, latest_qual_ds, org_volume, index_count
			, lag(org_volume) over(partition by org_id order by ds) org_volume_lw
			, lag(index_count) over(partition by org_id order by ds) index_count_lw
		from (
			select org_id, ds, sum(active_7d_usage) org_volume, min(qualification_ds) qual_ds, max(qualification_ds) latest_qual_ds, sum(search_index_count) index_count
		--	from awsdatacatalog.product_analytics.analytics__atlas_search_mbr_base_data_static_v2
--			from awsdatacatalog.product_analytics.analytics__atlas_search_mbr_base_data_static_6mo 
			from awsdatacatalog.product_analytics.an_atlas_search_mbr_base_data_wl
			where ds in (:lw_date, :tw_date)
			group by 1, 2
		)
	)
	where ds = :tw_date
)
, comp as (
	select coalesce(b.org_id, a.org_id) org_id, 
		coalesce(b.org_name, a.org_name) org_name,
		 a.channel channel_lw,
		 b.channel channel_tw,
		aarr_lw, aarr_tw, coalesce(aarr_tw,0)-coalesce(aarr_lw,0) aarr_wow,
		qc_lw, qc_tw, coalesce(qc_tw,0)-coalesce(qc_lw,0) qc_wow,
		qvolume_lw, qvolume_tw, 
		qual_ds,
		latest_qual_ds,
		biggest_instance_lw, biggest_instance_tw,
		qual_flg_lw, qual_flg_tw,
		coalesce(org_volume, 0) org_volume,
		coalesce(org_volume_lw, 0) org_volume_lw,
		coalesce(index_count, 0) index_count,
		coalesce(index_count_lw, 0) index_count_lw
	from (
		select org_id, org_name, channel, qmrr*12 aarr_lw, qclusters qc_lw, qvolume qvolume_lw, biggest_instance biggest_instance_lw, qual_flg qual_flg_lw
		from base
		where ds = :lw_date
	) a full outer join (
		select org_id, org_name, channel, qmrr*12 aarr_tw, qclusters qc_tw, qvolume qvolume_tw, biggest_instance biggest_instance_tw, qual_flg qual_flg_tw
		from base
		where ds = :tw_date
	) b on a.org_id = b.org_id
		and a.channel = b.channel	
	left join current 
		on coalesce(a.org_id, b.org_id) = current.org_id
)
-- select *
-- from comp
-- where 1=1
-- 	and ( (org_volume = 0 and org_volume_lw > 0) or (index_count = 0 and index_count_lw > 0) )
select 
	case 
		when ( (org_volume = 0 and org_volume_lw > 0) or (index_count = 0 and index_count_lw > 0) ) then 'Churned Org'
		when qc_wow > 0 then
			case
				when qual_ds between :lw_date and :tw_date then 'Newly qualified Org'
				when latest_qual_ds between :lw_date and :tw_date then 'Newly qualified Cluster'
				when qc_lw is null then 'Re-qualified Org'
				else 'Re-qualified Cluster'
			end
		when qc_wow < 0 then 
			case
				when qvolume_tw > 0 then 'Lapsed on 1 or more clusters'
				when (qvolume_tw is null or qvolume_tw = 0) then 'Lapsed on all clusters'
				else 'Unknown'
			end
		else
			case 
				when biggest_instance_tw > biggest_instance_lw then 'Cluster(s) upgraded'
				when biggest_instance_tw < biggest_instance_lw then 'Cluster(s) downgraded'
				else 'Non-Search related ARR change'
			end		
	end org_status
	, channel_lw, channel_tw
	, count(org_id) orgs
	, sum(aarr_wow) aarr_wow
	, sum(qc_wow) qc_wow
from comp
group by 1, 2, 3


-- Org lookup

select ds, cluster_id, cluster_name, org_id, org_name, instance_size, sales_channel, cluster_grade, active_7d_usage, lness_30d, total_data_indexed, search_index_count, mrr__total, mrr__total*12 aarr, qualification_flg, qualification_ds
--from awsdatacatalog.product_analytics.analytics__atlas_search_mbr_base_data_static_v2
--from awsdatacatalog.product_analytics.analytics__atlas_search_mbr_base_data_static_6mo
from awsdatacatalog.product_analytics.an_atlas_search_mbr_base_data_wl
where ds in (date'2023-11-04', date'2023-10-28', date'2023-10-21', date'2023-10-14')
and org_id = '628df1a0ccbf081ff5d4ad31'
order by 2, 1 desc

select *
from awsdatacatalog.product_analytics.ms_search_workloads_base
where org_id ='628df1a0ccbf081ff5d4ad31'

-- migrations
select *
from
(select ds, cluster_id, cluster_name, org_id, org_name, instance_size
, sales_channel, cluster_grade, active_7d_usage, lness_30d, total_data_indexed, search_index_count, mrr__total, mrr__total*12 aarr, qualification_flg, qualification_ds
, lag(sales_channel,1) OVER (PARTITION BY cluster_id ORDER BY ds) last_sales_channel
, lag(cluster_grade,1) OVER (PARTITION BY cluster_id ORDER BY ds) last_cluster_grade
, lag(aarr,1) OVER (PARTITION BY cluster_id ORDER BY ds) last_aarr
, lag(qualification_flg,1) OVER (PARTITION BY cluster_id ORDER BY ds) last_qualification_flg
from
(select ds, cluster_id, cluster_name, org_id, org_name, instance_size
, sales_channel, cluster_grade, active_7d_usage, lness_30d, total_data_indexed, search_index_count, mrr__total, mrr__total*12 aarr, qualification_flg, qualification_ds
--from awsdatacatalog.product_analytics.analytics__atlas_search_mbr_base_data_static_v2
--from awsdatacatalog.product_analytics.analytics__atlas_search_mbr_base_data_static_6mo
from awsdatacatalog.product_analytics.an_atlas_search_mbr_base_data_wl
where ds in (:lw_date, :tw_date)
) tmp) tmp2
where ds=:tw_date and qualification_flg = 1
order by org_id


select ds, cluster_id, cluster_name, org_id, org_name, instance_size, sales_channel, active_7d_usage, lness_30d, total_data_indexed, search_index_count, mrr__total, mrr__total*12 aarr, qualification_flg, qualification_ds
--from awsdatacatalog.product_analytics.analytics__atlas_search_mbr_base_data_static_v2
from awsdatacatalog.product_analytics.analytics__atlas_search_mbr_base_data_static_6mo
where ds in (date'2023-08-26')
and lower(org_name) like '%moveecar%'
order by 2, 1 desc



select ds, atlas_org_name, active_7d_usage
from awsdatacatalog.ns__analytics_postprocessing.analytics__atlas_search_kpi_usage_dim 
where ds >= date'2023-05-01'
and granularity_id = '5e811b475665404ef08b0d22'
order by 1 desc



select ds, org_id, org_name, sales_channel, sum(active_7d_usage), sum(total_data_indexed), sum(search_index_count), sum(mrr__total), sum(mrr__total*12) aarr
from awsdatacatalog.product_analytics.analytics__atlas_search_mbr_base_data_static_v2
--from awsdatacatalog.product_analytics.analytics__atlas_search_mbr_base_data_static_6mo
where ds >= date'2023-08-01'
and org_id = '5bcdd477f2a30b892b74b437'
and qualification_flg = 1
group by 1, 2, 3, 4
order by 1 desc



-- Cluster lookup

select ds, active_7d_usage, active_1d_usage, lness_30d, first_ds, mrr__total
from awsdatacatalog.ns__analytics_postprocessing.analytics__atlas_search_kpi_usage_dim 
where ds >= date'2023-02-01'
and granularity = 'cluster'
and granularity_id = '5e82c2d7b2fbdd779fa8081e'
order by 1 desc


select partition_date, is_sharding, cluster_deleted_at, instance_size, cluster_name, org_id
from awsdatacatalog.xform_cloud.cloud_cluster_org_dateversioned_v 
where partition_date >= date'2023-02-01'
and cluster_id = '5e82c2d7b2fbdd779fa8081e'
order by 1 desc



select *
--from awsdatacatalog.product_analytics.analytics__atlas_search_mbr_base_data_static_v2 
from awsdatacatalog.product_analytics.an_atlas_search_mbr_base_data_wl
where 1=1
--and ds in (date'2023-09-02', date'2023-09-09', date'2023-09-16')
and cluster_id = '622020773404041245a51238'
order by ds desc



select *
from awsdatacatalog.product_analytics.ms_search_org_mapping_final_version_dateversioned 
where cluster_id = '5bd30650d5ec13cc20af425c'
order by processed_date 




-- Search usage Contractions 

with lw as (
	select cluster_id, cluster_name, coalesce(account_name, org_name) org_name
--		, sales_channel channel
		, cluster_grade channel
		, instance_size, total_data_indexed, search_index_count, mrr__total, active_7d_usage
--	from awsdatacatalog.product_analytics.analytics__atlas_search_mbr_base_data_static_v2 mbr
	from awsdatacatalog.product_analytics.an_atlas_search_mbr_base_data_wl mbr
	LEFT join (
        SELECT account_id, account_name
        FROM awsdatacatalog.xform_sales.sfdc_account_v
    ) b ON mbr.sfdc_account_id = b.account_id	
	where ds = :lw_date
	and qualification_flg = 1
	and active_7d_usage > 0
)
, tw as (
	select cluster_id, group_id, instance_size, total_data_indexed, search_index_count, mrr__total, active_7d_usage
		, sum(active_7d_usage) over(partition by org_id, ds) org_usage
--	from awsdatacatalog.product_analytics.analytics__atlas_search_mbr_base_data_static_v2 mbr
	from awsdatacatalog.product_analytics.an_atlas_search_mbr_base_data_wl mbr
	where ds = :tw_date
)
, base as (
	select cluster_id, cluster_name, org_name, channel, group_id
		, coalesce(tw.instance_size, lw.instance_size) instance_size_tw
		, lw.instance_size instance_size_lw
		, coalesce(tw.total_data_indexed, 0) index_size_tw
		, lw.total_data_indexed index_size_lw
		, coalesce(tw.search_index_count, 0) index_count_tw
		, lw.search_index_count index_count_lw
		, coalesce(tw.mrr__total, 0)*12 arr_tw
		, lw.mrr__total*12 arr_lw
		, coalesce(tw.active_7d_usage, 0) search_volume_tw
		, lw.active_7d_usage search_volume_lw
		, org_usage org_usage_tw
	from lw left join tw
	using (cluster_id)
)
select a.cluster_id, a.cluster_name, org_name, channel, group_id
	, search_volume_tw, search_volume_lw
	, search_volume_tw - search_volume_lw search_volume_diff
	, search_volume_tw / (search_volume_lw*1.00) -1 search_volume_growth, org_usage_tw
	, index_size_tw, index_size_lw, arr_tw, arr_lw, index_count_tw, index_count_lw, instance_size_tw, instance_size_lw
	, CASE
        WHEN c.production_flag = TRUE THEN 'Y'
        ELSE 'N'
    END production_flg
from base a
LEFT JOIN awsdatacatalog.data_science.prod_production_identification_results c 
ON (
    a.cluster_id = c.cluster_id
    AND date(c.scored_date) = :tw_date
)
where search_volume_tw / (search_volume_lw*1.00) -1 < -0.95
order by 8, 9




-- Churned Orgs

with lw as (
	select org_id, coalesce(account_name, org_name) org_name
--		, sales_channel
		, cluster_grade channel
		, count(cluster_id) q_clusters, sum(total_data_indexed) index_size, sum(search_index_count) index_count, sum(mrr__total*12) q_aarr, sum(active_7d_usage) weekly_volume
--	from awsdatacatalog.product_analytics.analytics__atlas_search_mbr_base_data_static_v2 mbr
--	from awsdatacatalog.product_analytics.analytics__atlas_search_mbr_base_data_static_6mo mbr
	from awsdatacatalog.product_analytics.an_atlas_search_mbr_base_data_wl mbr
	LEFT join (
        SELECT account_id, account_name
        FROM awsdatacatalog.xform_sales.sfdc_account_v
    ) b ON mbr.sfdc_account_id = b.account_id	
	where ds = :lw_date
	and qualification_flg = 1
	and search_index_count > 0
	group by 1, 2, 3
)
, tw as (
	select *
	from (
		select *
			, coalesce(lag(index_count_tw) over(partition by org_id order by ds), 0) index_count_lw
			, coalesce(lag(weekly_volume_tw) over(partition by org_id order by ds), 0) weekly_volume_lw
		from (
			select ds, org_id, org_name, sum(total_data_indexed) index_size_tw, coalesce(sum(search_index_count), 0) index_count_tw, sum(mrr__total*12) aarr_tw, coalesce(sum(active_7d_usage), 0) weekly_volume_tw
				, sum(mrr__total*12) filter(where qualification_flg = 1) q_arr_tw
		--	from awsdatacatalog.product_analytics.analytics__atlas_search_mbr_base_data_static_v2
		--	from awsdatacatalog.product_analytics.analytics__atlas_search_mbr_base_data_static_6mo 
			from awsdatacatalog.product_analytics.an_atlas_search_mbr_base_data_wl
			where ds in ( :lw_date, :tw_date)
--				and search_index_count is not null
--				and active_7d_usage is not null
--				and search_index_count * active_7d_usage > 0
			group by 1, 2, 3
		)
	)
	where ds = :tw_date
--		and org_id = '628d417611801029aa0123c2'
)
select org_id, lw.*, index_size_tw, index_count_tw, aarr_tw, q_arr_tw
from lw left join tw
using (org_id)
where ((weekly_volume_tw = 0 and weekly_volume_lw > 0) or (index_count_tw = 0 and index_count_lw > 0))
order by 7 desc




--Org migrators

select ds, org_id, org_name, sales_channel, sum(active_7d_usage) q_volume, sum(total_data_indexed), sum(search_index_count), sum(mrr__total), sum(mrr__total*12) aarr
from awsdatacatalog.product_analytics.analytics__atlas_search_mbr_base_data_static_v2
where ds in (date'2023-07-29', date'2023-08-05', date'2023-08-12')
and org_id in ('5bbf4bc2014b763f913f524d', '64c3a0fcfa2eeb3f28c17464')
and qualification_flg = 1
group by 1, 2, 3, 4
order by 2, 1 desc




-- Newly qualified


with 
quals as (
	select org_id, min(qualification_ds) qual_ds
--	from awsdatacatalog.product_analytics.analytics__atlas_search_mbr_base_data_static_6mo 
--	from awsdatacatalog.product_analytics.analytics__atlas_search_mbr_base_data_static_v2
	from awsdatacatalog.product_analytics.an_atlas_search_mbr_base_data_wl
	where ds = :tw_date
	group by 1
)
, tw as (
	select ds, org_id, org_name
--		, sales_channel channel
		, cluster_grade channel
		, sum(total_data_indexed) index_size, sum(search_index_count) index_count, sum(mrr__total*12) qarr, sum(active_7d_usage) qvol
--	from awsdatacatalog.product_analytics.analytics__atlas_search_mbr_base_data_static_6mo
	from awsdatacatalog.product_analytics.an_atlas_search_mbr_base_data_wl
	where ds >= :tw_date - interval '60' day 
		and day_of_week(ds) = 6
		and qualification_flg = 1
	group by 1, 2, 3, 4
)
select ds, channel
	, count(org_id) orgs
	, sum(qarr) qarr
from tw join quals
using (org_id)
where qual_ds between ds - interval'6' day and ds
group by 1, 2
order by 1, 2



-- Churned

with quals as (
	select *, lead(qarr) over(partition by org_id order by ds) tw_qarr
	from (
		select ds, org_id
--			, sales_channel
			, cluster_grade channel
			, sum(mrr__total*12) qarr
--		from awsdatacatalog.product_analytics.analytics__atlas_search_mbr_base_data_static_6mo 
		from awsdatacatalog.product_analytics.an_atlas_search_mbr_base_data_wl
		where day_of_week(ds) = 6
			and qualification_flg =1
		group by 1, 2, 3
	)
)
, tw as (
	select *
		, lag(vol) over(partition by org_id order by ds) prev_vol
		, lag(indexes) over(partition by org_id order by ds) prev_indexes
	from (
		select ds, org_id, coalesce(sum(active_7d_usage), 0) vol, coalesce(sum(search_index_count), 0) indexes
--		from awsdatacatalog.product_analytics.analytics__atlas_search_mbr_base_data_static_6mo 
		from awsdatacatalog.product_analytics.an_atlas_search_mbr_base_data_wl
		where day_of_week(ds) = 6
		group by 1, 2
	)
--	where org_id = '63eaa3d18a71b9732c09fe8b'
)
select quals.ds + interval '7' day as ds, channel, count(org_id) churned_orgs
	, sum(coalesce(tw_qarr, 0)-coalesce(qarr, 0)) arr_wow
	, sum(coalesce(qarr, 0)) qarr_lw
--select *
from quals left join tw
using (org_id)
where quals.ds + interval '7' day = tw.ds
	and qarr > 0
	and (( vol = 0 and prev_vol > 0 ) or ( indexes = 0 and prev_indexes > 0 ))
	and quals.ds + interval '7' day >= :tw_date - interval '60' day 
group by 1, 2
order by 1 desc, 2





-- Lapsed orgs

with quals as (
	select *, lead(qarr) over(partition by org_id order by ds) tw_qarr
	from (
		select ds, org_id, org_name
--			, sales_channel
			, cluster_grade channel
			, sum(mrr__total*12) qarr
--		from awsdatacatalog.product_analytics.analytics__atlas_search_mbr_base_data_static_6mo 
		from awsdatacatalog.product_analytics.an_atlas_search_mbr_base_data_wl
		where day_of_week(ds) = 6
			and qualification_flg =1
		group by 1, 2, 3, 4
	)
--	where ds = date'2023-09-09'
)
, tw as (
	select *, lead(vol) over(partition by org_id order by ds) tw_vol
	from (
		select ds, org_id, sum(active_7d_usage) vol
--		from awsdatacatalog.product_analytics.analytics__atlas_search_mbr_base_data_static_6mo 
		from awsdatacatalog.product_analytics.an_atlas_search_mbr_base_data_wl
		where day_of_week(ds) = 6
		group by 1, 2
	)
)
select ds + interval '7' day ds, channel, count(distinct org_id) orgs, sum(qarr) qarr
from quals left join tw
using (ds, org_id)
where 1=1
	and qarr > 0
	and tw_qarr is null
--	and ds = date'2023-09-09'
	and vol > 0
	and (tw_vol > 0 and tw_vol is not null)
	and ds + interval '7' day >= :tw_date - interval '60' day
group by 1, 2
order by 1, 2
